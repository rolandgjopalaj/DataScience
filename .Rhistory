mutate(Salary_Index =
ifelse(Salary_Frequency=="Hourly",
(Salary_From+Salary_To)/2,
ifelse(FullPart_Time=="P",
## if the work is  part-time
ifelse(Salary_Frequency=="Annual",
(Salary_From+Salary_To)/(17*260),
(Salary_From+Salary_To)/(17)
),
## if the work is  full-time
ifelse(Salary_Frequency=="Annual",
(Salary_From+Salary_To)/(37*260),
(Salary_From+Salary_To)/(37)
)
)
)
)
## create a salary index
jobs = jobs %>%
mutate(Salary_Index =
ifelse(Salary_Frequency=="Hourly",
(Salary_From+Salary_To)/2,
ifelse(FullPart_Time=="P",
## if the work is  part-time
ifelse(Salary_Frequency=="Annual",
(Salary_From+Salary_To)/(17*260),
(Salary_From+Salary_To)/(17)
),
## if the work is  full-time
ifelse(Salary_Frequency=="Annual",
(Salary_From+Salary_To)/(37*260),
(Salary_From+Salary_To)/(37)
)
)
)
)
library(tidyr)
library(dplyr)
library(readr)
## Import the dataset
jobs = read_csv("JOBS_nyc.csv")
## remove the dublicated lines
jobs = jobs[!duplicated(jobs), ]
## Select the necessary data and rename the columns(practical names)
jobs = jobs %>%
select(`Job ID`, `Agency`, `Posting Type`, `# Of Positions`, `Title Classification`, `Job Category`, `Full-Time/Part-Time indicator`, `Career Level`, `Salary`, `Work Location`, `Division/Work Unit`, `Posting Date`, `Posting Updated`) %>%
rename(Id=`Job ID`, Posting_Type=`Posting Type`, Nr_of_Positions=`# Of Positions`, Classification=`Title Classification`, Job_Category=`Job Category`, FullPart_Time=`Full-Time/Part-Time indicator`, Career_Level=`Career Level`, Work_Location=`Work Location`, Work_Unit=`Division/Work Unit`, Posting_Date=`Posting Date`, Posting_Updated=`Posting Updated`)
## Fix the salary problem (not atomic data)
## separating salary interval in  different columns
jobs = jobs %>%
separate(Salary, into = c("Salary_From", "Salary_To", "Salary_Frequency"),
sep = "-", convert = TRUE)
## create a salary index
jobs = jobs %>%
mutate(Salary_Index =
ifelse(Salary_Frequency=="Hourly",
(Salary_From+Salary_To)/2,
ifelse(FullPart_Time=="P",
## if the work is  part-time
ifelse(Salary_Frequency=="Annual",
(Salary_From+Salary_To)/(17*260),
(Salary_From+Salary_To)/(17)
),
## if the work is  full-time
ifelse(Salary_Frequency=="Annual",
(Salary_From+Salary_To)/(37*260),
(Salary_From+Salary_To)/(37)
)
)
)
)
count(jobs, Work_Location)
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
ggplot(data = jobs) +
geom_bar(mapping = aes(x = Agency))
agencyMore = jobs %>%
count(Agency) %>%
arrange(n)
ggplot(data = jobs) +
geom_bar(mapping = aes(x = Agency))
jobs %>%
count(Agency) %>%
arrange(n)
jobs %>%
count(Agency) %>%
arrange(-n)
?top_n
jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
count(jobs, agency)
count(jobs, Agency)
mutate(ACR = ifelse(Agency="ADMIN FOR CHILDREN'S SVCS", "AFCS", ""))
jobs = mutate(jobs,ACR = ifelse(Agency="ADMIN FOR CHILDREN'S SVCS", "AFCS", ""))
jobs = mutate(jobs, ACR = ifelse(Agency=="ADMIN FOR CHILDREN'S SVCS", "AFCS", ""))
count(jobs, Agency)
count(jobs, Agency)
jobs = mutate(jobs, ACR = ifelse(Agency=="ADMIN TRIALS AND HEARINGS", "ATAH", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="ADMIN TRIALS AND HEARINGS", "ATAH", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="ADMIN TRIALS AND HEARINGS", "ATAH", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF ENVIRONMENT PROTECTION", "DOEP", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="HRA/DEPT OF SOCIAL SERVICES", "HDOSS", ""))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF HEALTH/MENTAL HYGIENE", "DOHMH", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF HEALTH/MENTAL HYGIENE", "DOHMH", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="NYC HOUSING AUTHORITY", "NHA", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPARTMENT OF TRANSPORTATION", "DOT", ""))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPARTMENT OF CORRECTION", "DOC", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPARTMENT OF CORRECTION", "DOC", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="LAW DEPARTMENT", "LD", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="ADMIN FOR CHILDREN'S SVCS", "AFCS", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF DESIGN & CONSTRUCTION", "DODC", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="HOUSING PRESERVATION & DVLPMNT", "HPD", ""))
count(jobs, Agency) %>%
arrange(n)
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="BOARD OF CORRECTION", "DOC", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="BOROUGH PRESIDENT-QUEENS", "BPQ", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="CIVIL SERVICE COMMISSION", "CSC", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF RECORDS & INFO SERVICE", "DORIS", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="LANDMARKS PRESERVATION COMM", "LPC", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="MANHATTAN COMMUNITY BOARD #2", "MCB2", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="MANHATTAN COMMUNITY BOARD #6", "MCB6", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="MANHATTAN COMMUNITY BOARD #9", "MCB9", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="NYC POLICE PENSION FUND", "NPPF", ""))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="PUBLIC ADMINISTRATOR-NEW YORK", "PANY", ""))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="PUBLIC ADMINISTRATOR-NEW YORK", "PANY", Agency))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF ENVIRONMENT PROTECTION", "DOEP", Agency))
count(jobs, Agency) %>%
arrange(n)
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF ENVIRONMENT PROTECTION", "DOEP", ACR))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF ENVIRONMENT PROTECTION", "DOEP", ACR))
count(jobs, Agency) %>%
arrange(-n)
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="HRA/DEPT OF SOCIAL SERVICES", "HDOSS", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF HEALTH/MENTAL HYGIENE", "DOHMH", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="NYC HOUSING AUTHORITY", "NHA", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPARTMENT OF TRANSPORTATION", "DOT", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPARTMENT OF CORRECTION", "DOC", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="LAW DEPARTMENT", "LD", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="ADMIN FOR CHILDREN'S SVCS", "AFCS", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF DESIGN & CONSTRUCTION", "DODC", ACR))
count(jobs, Agency) %>%
arrange(-n)
jobs = mutate(jobs, ACR = ifelse(Agency=="HOUSING PRESERVATION & DVLPMNT", "HPD", ACR))
count(jobs, Agency) %>%
arrange(n)
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="BOARD OF CORRECTION", "BOC", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="BOROUGH PRESIDENT-QUEENS", "BPC", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="CIVIL SERVICE COMMISSION", "CSC", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="DEPT OF RECORDS & INFO SERVICE", "DORIS", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="LANDMARKS PRESERVATION COMM", "LPC", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="MANHATTAN COMMUNITY BOARD #2", "MCB2", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="MANHATTAN COMMUNITY BOARD #6", "MCB6", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="MANHATTAN COMMUNITY BOARD #9", "MCB9", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="NYC POLICE PENSION FUND", "NPPF", ACR))
count(jobs, Agency) %>%
arrange(n)
jobs = mutate(jobs, ACR = ifelse(Agency=="PUBLIC ADMINISTRATOR-NEW YORK", "PANY", ACR))
count(jobs, ACR) %>%
arrange(n)
count(jobs, ACR) %>%
arrange(-n)
agencyMore = jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
write_csv(jobs, "ruje.csv")
write_csv(jobs, "ruje.csv")
prova = read.csv("ruje.csv")
prova
agencyMore = jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
agencyLess = jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
agencyMore = jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
agencyLess = jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
##more job posting
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = ACR))
##less job posting
ggplot(data = agencyLess) +
geom_bar(mapping = aes(x = ACR))
agencyMore = jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
agencyLess = jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
##more job posting
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = ACR)) +
scale_y_log10()
jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
agencyMore = jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
agencyLess = jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
##more job posting
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = ACR)) +
scale_y_continuous(limits = c(0,1000))
##less job posting
ggplot(data = agencyLess) +
geom_bar(mapping = aes(x = ACR)) +
scale_y_continuous(limits = c(0,10))
jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
jobs %>%
count(ACR) %>%
arrange(-n) %>%
top_n(10)
jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
jobs %>%
count(Agency) %>%
arrange(n) %>%
top_n(10)
kot = read.csv("ruje.csv")
kot %>%
count(Agency) %>%
arrange(n) %>%
top_n(10)
jobs %>%
count(Agency
jobs %>%
jobs %>%
count(Agency)
jobs %>%
count(ACR) %>%
arrange(-n)
jobs %>%
count(ACR) %>%
arrange(n)
jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
?top_n
jobs %>%
count(ACR) %>%
top_n(10, wt=n)
jobs %>%
count(ACR) %>%
arrange(-n)
jobs %>%
count(ACR) %>%
arrange(n)
agencyMore = jobs %>%
count(ACR) %>%
arrange(n)
agencyLess = jobs %>%
count(ACR) %>%
arrange(n) %>%
top_n(10)
##more job posting
agencyMore = jobs %>%
count(ACR) %>%
arrange(-n)
ggplot(data = agencyMore %>% top_n(10)) +
geom_bar(mapping = aes(x = ACR)) +
scale_y_continuous(limits = c(0,1000))
##less job posting
agencyLess = jobs %>%
count(ACR) %>%
arrange(n)
ggplot(data = agencyLess %>% top_n(10)) +
geom_bar(mapping = aes(x = ACR)) +
scale_y_continuous(limits = c(0,10))
agencyMore %>% top_n(10)
agencyLess %>% top_n(10)
agencyMore = jobs %>%
count(Agency) %>%
arrange(n) %>%
top_n(10)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n) %>%
top_n(10)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))+
scale_y_continuous(limits = c(0,1000))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))+
scale_y_continuous(limits = c(0,1000))
agencyMore = jobs %>%
count(Agency) %>%
arrange(-n)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
ggplot(data = jobs) +
geom_bar(mapping = aes(x = Agency))
jobs %>%
group_by(Agency) %>%
summarise(count = n()) %>%
arrange(-count)
jobs %>%
group_by(ACR) %>%
summarise(count = n()) %>%
arrange(-count)
jobs %>%
group_by(ACR) %>%
summarise(count = n()) %>%
arrange(count)
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency))
agencyMore = jobs %>%
group_by(ACR) %>%
summarise(count = n()) %>%
arrange(count)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = Agency, y=count))
agencyMore = jobs %>%
group_by(ACR) %>%
summarise(count = n()) %>%
arrange(count)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = ACR))
agencyMore = jobs %>%
group_by(ACR) %>%
summarise(count = n()) %>%
arrange(count)
## Its not visible
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = ACR, y = count))
jobs %>%
mutate(n = count(jobs, Agency))
ggplot(data = agencyMore) +
geom_bar(mapping = aes(x = ACR))
ggplot(data = jobs) +
geom_bar(mapping = aes(x = Agency))
ggplot(data = jobs) +
geom_bar(mapping = aes(x = ACR))
?scan
